Object 클래스
모든클래스의 부모 클래스. 자바의 모든 클래스는
.equals(Objent obj) : boolean 객체 번지를 비교하고 결과를 리턴 (String 은 문자열 비교 오버라이딩) 객체 동등 비교시

.hashCode(해시코드 리턴) : int 객체 해시코드린 겍체를 식별하는 정수를 의미함
object 클래스의 hashcode() 객체의 메모리 번지를 이용하여 해시코드를 생성한다.
객체마다 다른 정수값을 리턴한다.

hashCode() 의 목적은 객체의 주소값을 기반으로 해싱해서 고유한 숫자값을 반환한다.
객체가 같은지 같지 않은지를 판볋한다.
만일 객체 자체릐 주소값(해시값) 얻어야 하는 상황이라면 : identirtHASH

***자바는 두 객체가 동등함을 비교할때 equals 와 hashcode 메소드를 같이 사용하여 검증한다.

.toString : String

2. System 클래스
자바의 byte 코드의 실행 주체는 JVM 위에서 실행되므로, 운영체제의 모든 기능을 자바코드로 직접 접근하기 어렵습니다.

java.lang.System 이용하면 운영체제의 일부 기능을 이용할 수 있다.

System.exit(0) 프로세스를 강제로 종료


//진헹 시간 읽기

System 클래스의   1970년 1월 1일 0시부터 시작되서 현재까지 진행된 시간
                currentTimeMills() 1/1000
                nanoTime() 1/1000000000 초 단위로 진행된 시간 반환


4. 정구표현식 ( Regular Expression )
 문자열 데이터 중에서 원하는 조건 ( 패턴 ) 과 일치하는 문자열 부분을 찾아내기 위해 사용하는 표현
 미리 정의된 기호와 문자를 이용해서 작성된 문자열
 - 전화번호, 주민등록번호, 이메일, 비밀번호 등 중요한 데이터를 지정한 형식으로 제대로 입력했는지 검증할때

 exampleshinsaege@gmail.com
 ([a-zA-Z0-9_.+-])@[a-zA-Z0-9_.+-]+\.[a-zA-Z0-9_.+-]

 . => 임의의 문자 1개 의미
 ^ => 시작의미 , [^] 브정의 의미 ^a : a 로 시작하는 단어 [^a] : a 가 아닌 철자인 문자 1개

$ => $ 안의 문자열로 문자가 끝나는가? a$ : a로 끝나는 단어
[] => [] 대괄호 안의 문자가 있는지를 확인 [ab][cd] : a,b 중 한문자와 c,d 중 한문자만 허용 ac ad bc bd
[^] => [] 안에 ^ 문자가 있으면 , 해당 문자 제외 [^a-z] : 알파벳 소문자 a부터 z까지를 제외한 모든 문자
- => 사이의 문자 또는 숫자 [a-z] [A-Z] [a-z0-9] : 알파벳 소문자 전체 , 0~9 까지
| => [a | b] a 또는 b 문자 한문자만 허용
() => 그룹 01(0|1) => 010, 011 012(x)
{} => 개수 a{3}b a가 3번 온 후 b가 와야한다. aab(x)  aaab(O) aaaaab(0)
\b => 공백 , tab apple\b : a[[le 뒤에 공백이 있다. apple juice(0) apple.com(x)
\B => \b 의 반대 apple.com (0) apple juice(x)
\d => 0-9 사이의 숫자 [0-9] 같은의미
\D => \d 의 반대 [^0-9] 숫자가 아닌 문자 하나(숫자 제외)
\s => 공백 , 탭
\S => \s 의 반대
\w => [a-zA-Z_0-9] : 알파벳 대소문자 + 숫자 + _ 중의 한문자 가능
\W => \w 의 반대 [^a-zA-Z_0-9]
============================================================================
정규식 수량기호
? => 앞의 표현식이 없거나 or 최대 한개만 a1? : 1이 최대 한개만 있거나 없을 수 도 있디.
a(o) , a1(o), a11(x) a111(x)

* => 앞의 표현식이 없거나 or 있거나 (여러개) a1* : 1이 있을 수도 있고 없을 수도 있다.
a(o) a1(o) a11(o) a111(o)
+ => 앞의 표현식이 1개 이상 or 여러개 a1+ : 1이 반드시 1개 이상 있다.
a(x) a1(o) a11(o)
{n} 딱 n개만 있다 a{3} : a가 딱 3개 있다. aa(x) aaa(o) aaaa(x)
{n,m} n개 이상 m개 이하 a{3,6} : a 가 3개 이상 5개 있다.
{n,} n개이상 a{2,} : a가 2개이상 있다.

=============================================================================
숫지 ^[0-9]*$
영문자 ^[a-zA-Z]*$
한글  ^[가-힣]*$
E-mail \\w+@\\w+\\.\\w+(\\.\\w+)?
전화번호    ^\d{2,3}-\d{3,4}-\d{4}$
휴대전화번호  ^01(?:0|1|[6-9])-(?:\d{3}|\d{4})-\d{4}$
주민등록번호 \d{6}\-[1-4]\D{6}
우ㅠㅕㄴ번호 ^\d{3}-\d{2}$
======================================================
정규식 그룹 캡처 기호
() 그룹
(?:) 찾지만 그룹에 포함 안됨
(?=) = 앞문자를 기준으로 정방탐색
(?<=) =뒤 문자를 기준으로 후방 탐색

================================================
리플렉션(reflection)
- 자바의 Class 클래스 (java,lang.class)
어플리케이션 실행 중 클래스를 동적으로 불러와 다루어야 할 경우 클래스의 정보를 얻을 때 사용하는 클래스
